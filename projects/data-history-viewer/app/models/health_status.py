# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class HealthStatus(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, healthy: str=None, message: str=None):
        """
        HealthStatus - a model defined in Swagger

        :param healthy: The healthy of this HealthStatus.
        :type healthy: str
        :param message: The message of this HealthStatus.
        :type message: str
        """
        self.swagger_types = {
            'healthy': str,
            'message': str
        }

        self.attribute_map = {
            'healthy': 'healthy',
            'message': 'message'
        }

        self._healthy = healthy
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'HealthStatus':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HealthStatus of this HealthStatus.
        :rtype: HealthStatus
        """
        return deserialize_model(dikt, cls)

    @property
    def healthy(self) -> str:
        """
        Gets the healthy of this HealthStatus.
        Health status color code

        :return: The healthy of this HealthStatus.
        :rtype: str
        """
        return self._healthy

    @healthy.setter
    def healthy(self, healthy: str):
        """
        Sets the healthy of this HealthStatus.
        Health status color code

        :param healthy: The healthy of this HealthStatus.
        :type healthy: str
        """
        allowed_values = ["green", "yellow", "red"]
        if healthy not in allowed_values:
            raise ValueError(
                "Invalid value for `healthy` ({0}), must be one of {1}"
                .format(healthy, allowed_values)
            )

        self._healthy = healthy

    @property
    def message(self) -> str:
        """
        Gets the message of this HealthStatus.
        Health message

        :return: The message of this HealthStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """
        Sets the message of this HealthStatus.
        Health message

        :param message: The message of this HealthStatus.
        :type message: str
        """

        self._message = message

